# บทที่ 3 Working with Git Locally #

ก่อนอื่นผมอยากจะแนะนำคำศัพท์คำหนึ่งก่อน คือ repository repository ถ้าจะให้คิดง่ายๆมันก็คือโปรเจ็กนั่นเอง ก่อนที่เราจะใช้งาน Git ได้เราต้องสร้าง repository ขึ้นมาก่อน จากนั้นอะไรก็ตามที่มีการเปลี่ยนแปลงภายใน repository นั้น Git มันจะสามารถจับได้ทั้งหมด ไม่ว่าจะมีไฟล์ใหม่เพิ่มเข้ามา, ไฟล์ถูกลบออกไป หรือ ไฟล์ถูกแก้ไข

เรามาทดลองเล่นกับ Git ไปตามขั้นตอน ดู

## สร้าง repository ##

1.	เปิด Source Tree ขึ้นมา
	
	![](images/chapter-3/init_repository_01.png)

2.	คลิกปุ่ม Clone / New
	
	![](images/chapter-3/init_repository_02.png)

3.	หน้าต่าง Clone / Add / Create Repository จะเปิดขึ้นมา ให้คลิกไปที่แท็บ Create New Repository ช่อง Repository Type เลือกเป็น Git จากนั้นคลิกปุ่ม ... ที่อยู่ด้านหลัง Destination Path เพื่อระบุโฟลเดอร์สำหรับ Repository
	
	![](images/chapter-3/init_repository_03.png)
    
4.	สร้างโฟลเดอร์ใหม่ชื่อ my-website ไว้ที่ C:\xampp\htdocs  จากนั้นเลือกโฟลเดอร์นี้เป็นโฟลเดอร์สำหรับ Repository
	
	![](images/chapter-3/init_repository_04.png)
    
5.	เมื่อเลือกโฟลเดอร์สำหรับ Repository แล้วคลิกปุ่ม Create
	
	![](images/chapter-3/init_repository_05.png)
    
6.	Repository จะถูกสร้างขึ้นมา
	
	![](images/chapter-3/init_repository_06.png)
    
    
## ทดลองเล่น Git ครั้งแรก ##    

เอาล่ะ หลังจากสร้าง Repository ขึ้นมาแล้ว เรามาลองเล่นกับ Git ดูหน่อยเป็นการเรียกน้ำย่อยในเบื้องต้น และเพื่อพอให้รู้คร่าวๆ ว่าแท้จริงแล้ว Git มันทำอะไรเพื่อเราบ้างและมันไว้ใช้ทำอะไรกันแน่

1.	เข้าไปยังโฟลเดอร์ C:\xampp\htdocs\my-website 

2.	สร้างไฟล์ใหม่ขึ้นมาสักไฟล์ชื่อ info.php ข้างในเขียนคำสั่งดังภาพแล้วบันทึก
	
	![](images/chapter-3/try_git_01.png)

3.	ไปที่โปรแกรม Source Tree จะเห็นว่าไฟล์ที่เราเพิ่มเข้าไปในโฟลเดอร์จะถูก Git มองเห็น และหากคลิกที่ไฟล์จะเห็นด้วยว่า Git มันรู้ว่าภายในไฟล์เกิดการเปลี่ยนแปลงอะไร
	
	![](images/chapter-3/try_git_02.png)
    
4.	ติ๊กเครื่องหมายถูกหน้าไฟล์ เพื่อเลือกไฟล์ ไฟล์ที่ถูกเลือกจะเลื่อนขึ้นไปอยู่ที่ช่องด้านบน
	
	![](images/chapter-3/try_git_03.png)
    
5.	พิมพ์บันทึกความจำลงไปในช่อง Commit Message จากนั้นคลิกปุ่ม Commit
	
	![](images/chapter-3/try_git_04.png)
    
6.	รอแป้บนึง จากนั้นคลิกที่แท็บ Log History ดู จะเห็นข้อความบันทึกความจำของเรา 1 รายการ
	
	![](images/chapter-3/try_git_05.png)    
    
กระบวนการการทำตรงนี้ เรียกว่าบันทึกการเปลี่ยนแปลงของโค้ด เราจะใช้เมื่อเราเขียนโค้ด เขียนๆๆๆ ทดสอบๆๆๆ จนมันทำงานตามที่เราต้องการแล้ว เราก็บันทึกมันไว้ พร้อมเขียนข้อความเตือนความจำว่าเราได้ทำอะไรกับโค้ดลงไป

ทีนี้เรามาลองต่อ 

7.	เปิดไฟล์ info.php ของเราขึ้นมา แล้วลองแก้ไขโค้ดใหม่ (อย่าลืมบันทึก)
	
	![](images/chapter-3/try_git_07.png)    
    
8.	กลับไปที่โปรแกรม Source Tree จะเห็นว่า Source Tree มันรู้ว่าเราเปลี่ยนแปลงโค้ดบรรทัดไหนไปบ้าง หากดูทางเพนขวามือสุด จะเห็นบางบรรทัดเป็นสีขาว นั่นหมายถึงโค้ดบรรทัดนั้นไม่มีการเปลี่ยนแปลง และจะห็นบางบรรทัดเป็นสีเขียว และมีเครื่องหมาย + อยู่ด้านหน้า นั่นหมายความว่า โค้ดบรรทัดนั้นๆถูกเพิ่มเข้ามาใหม่ 
	
	![](images/chapter-3/try_git_08.png)    
        
9.	คลิกที่ปุ่ม ... ด้านหลังชื่อไฟล์ (ปุ่มมันจะเล็กมาก) คลิกเลือก  Discard File
	
	![](images/chapter-3/try_git_09.png)    
    
10.	จะมีหน้าต่างยืนยันขึ้นมา คลิกปุ่ม OK
	
	![](images/chapter-3/try_git_10.png)    
    
11.	จากนั้นเปิดไฟล์ info.php ขึ้นมา จะเห็นว่าโค้ดที่เราใส่เข้าไปใหม่ ถูกเอาออกทั้งหมด
	
	![](images/chapter-3/try_git_11.png)    
    
กระบวนการตรงนี้ เป็นการยกเลิกการเปลี่ยนแปลงโค้ด มันจะมีประโยชน์มากในกรณีเราอยากทดลองเปลี่ยนนั่น เล่นนี่กับโค้ด เมื่อสิ้นวันเราไม่จำเป็นต้องมานั่งจำว่าเราเล่นอะไรโค้ดไปบ้าง  เราแค่ Discard มันทิ้งเท่านั้นเอง โค้ดก็จะกลับมาเหมือนไม่มีอะไรเกิดขึ้น 

นี่ถ้าไม่ใช้ Git คงต้องสำเนาโค้ดก่อนการเล่นกับมัน แต่ถ้าเราลืมสำเนาไว้ล่ะ 

ลองเล่นต่ออีกหน่อย 

12.	เข้าไปยังโฟลเดอร์ C:\xampp\htdocs\my-website ลบไฟล์ info.php ทิ้ง

13.	จากนั้นเปิดโปรแกรม Source Tree จะเห็นว่า Source Tree  ก็รู้ว่าไฟล์ถูกลบไป
	
	![](images/chapter-3/try_git_12.png)    
    
14.	ให้บันทึกการเปลี่ยนแปลงนี้ไว้ โดยการติ๊กเลือกชื่อไฟล์ เขียนบันทึกความทรงจำ แล้วคลิกปุ่ม Commit
	
	![](images/chapter-3/try_git_13.png)
    
การเปลี่ยนแปลง ที่เราบันทึกไว้เป็นระยะๆ มันเป็นเหมือน Save Point ที่เราสามารถไปเรียกมันกลับมาดูเมื่อไรก็ได้ 

15.	ที่ Source Tree คลิกแท็บ Log / History คลิกขวาตรง Save Point ก่อนหน้าเราจะลบไฟล์ info.php ทิ้ง 
	จากนั้นคลิกเลือก Checkout...
	![](images/chapter-3/try_git_14.png)   
    
16.	จะมีคำเตือนบางอย่างแสดงขึ้นมา (บางทีก็ไม่มี ไม่ต้องตกใจนะ) ไม่ต้องสนใจ คลิกปุ่ม OK
	![](images/chapter-3/try_git_15.png)        
    
17.	กลับไปดูโฟลเดอร์ C:\xampp\htdocs\my-website จะเห็นว่าไฟล์ info.php ที่เราลบมันทิ้งไปถูกเรียกกลับคืนมา พร้อมทั้งโค้ดที่อยู่ภายใน ไม่หายไปสักบรรทัด
	![](images/chapter-3/try_git_16.png)
    
เป็นไงบ้างครับ พอเห็นประโยชน์จากการใช้งาน Git นะครับ นี่เป็นเพียงแค่น้ำจิ้มเท่านั้น บทต่อๆไปเราจะลงคลุกการใช้งานคำสั่ง Git แบบถึงน้ำถึงเนื้อมากขึ้น